#Nico Campbell
# January 19
#On my honor I have neither given nor recieved unathoirzed aide
#I had a lot of fun with this project once I was able to properly work with the data. The original CSV was really wonky, so I ended up just 
#ended up importing some of the data manually, which you can see below.
#I created three distinct graphs: a simply line graph comparing 2010 and 1900 death rates,
#a pie chart comparing the average death rates for the years that i imported data for,
#and a 3d graph that graphed scatter plots of all of the years that I imported, all on distinct "planes" so you can compare them easily
#the final feature of this program comes after you close all of the graphs. The terminal can prompt you for a year and an age,
#and then it will plot a line graph with that year's death rate, marking the point on the line where the age you chose falls. 
#it also prints a string that states the percent chance of death.
#Sources:
#https://matplotlib.org/
#https://stackoverflow.com/questions/12444716/how-do-i-set-the-figure-title-and-axes-labels-font-size-in-matplotlib
#https://stackoverflow.com/questions/1985856/how-to-make-a-3d-scatter-plot-in-python




import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D 

#had to just make lists because the cvs couldn't be arranged properly because the data was eneven !!!
year1900 = [0.145957,0.038141,0.019578,0.013529,0.010797,0.00794,0.005698,0.004073,0.003046,0.002555,0.002484,0.00267,0.002936,0.003154,0.003356,0.003673,0.004148,0.004676,0.005233,0.005797,0.006421,0.007024,0.007445,0.007616,0.007606,0.007526,0.007496,0.007554,0.007754,0.008057,0.008382,0.00867,0.008939,0.009172,0.00938,0.009603,0.009845,0.010077,0.010294,0.01051,0.010743,0.011015,0.011337,0.011722,0.012169,0.012677,0.013235,0.013831,0.014462,0.015145,0.01589,0.016732,0.017708,0.018841,0.020114,0.021543,0.023065,0.024592,0.026088,0.027618,0.029303,0.031228,0.033395,0.035841,0.038578,0.041585,0.044879,0.048518,0.052527,0.056907,0.061824,0.067136,0.072537,0.077928,0.083538,0.089449,0.096175,0.104262,0.113999,0.125035,0.136917,0.149054,0.161175,0.173025,0.184855,0.197067,0.20998,0.22376,0.238407,0.253782,0.269703,0.285977,0.30241,0.318835,0.335096,0.352119,0.369937,0.388582,0.408089,0.428493,0.449918,0.472414,0.496034,0.520836,0.546878,0.574222,0.602933,0.633079,0.664733,0.69797,0.732869,0.769512,0.807988,0.848387,0.890806,0.935347,0.982114,1.0,1.0,1.0,1.0]
year1910 = [0.120059,0.027289,0.014074,0.009755,0.007793,0.00581,0.004259,0.003142,0.002447,0.002129,0.002106,0.002263,0.002475,0.002652,0.002817,0.003061,0.003421,0.003828,0.004272,0.004732,0.005243,0.005735,0.006085,0.006236,0.006246,0.006203,0.006207,0.006291,0.0065,0.006802,0.007133,0.007442,0.00773,0.007978,0.008205,0.008438,0.008706,0.009016,0.00938,0.00979,0.010227,0.010677,0.011146,0.011629,0.01213,0.012702,0.01331,0.013864,0.014333,0.014777,0.015238,0.015843,0.016707,0.017906,0.019378,0.021031,0.022745,0.024463,0.026133,0.027815,0.029678,0.031765,0.03397,0.036291,0.038793,0.041512,0.044568,0.048082,0.052133,0.056676,0.061734,0.067139,0.072694,0.078311,0.084162,0.090268,0.097058,0.105021,0.1144,0.124863,0.136271,0.147852,0.158849,0.168867,0.178468,0.188504,0.199675,0.212384,0.226718,0.242477,0.259383,0.277114,0.295355,0.313827,0.332279,0.351231,0.370647,0.390483,0.410694,0.431229,0.452791,0.47543,0.499202,0.524162,0.55037,0.577888,0.606783,0.637122,0.668978,0.702427,0.737548,0.774426,0.813147,0.853804,0.896494,0.941319,0.988385,1.0,1.0,1.0,1.0]
year1920 = [0.085935,0.018849,0.009794,0.006821,0.005456,0.004377,0.003538,0.002917,0.002494,0.002247,0.002157,0.002203,0.002362,0.002614,0.002938,0.003339,0.003776,0.004179,0.004512,0.004785,0.005074,0.005368,0.005576,0.005671,0.005688,0.005661,0.005661,0.005747,0.00596,0.006261,0.006595,0.006893,0.007134,0.00729,0.007384,0.007478,0.007601,0.007732,0.007877,0.008044,0.00823,0.008448,0.008714,0.009039,0.009421,0.009862,0.010355,0.010891,0.011468,0.012101,0.012791,0.01357,0.014477,0.015536,0.016726,0.01809,0.019536,0.020923,0.022191,0.023443,0.024811,0.026466,0.028495,0.030987,0.033899,0.037141,0.040629,0.044368,0.048335,0.052577,0.057275,0.062406,0.06779,0.073392,0.079342,0.085576,0.092459,0.100489,0.10989,0.120347,0.131686,0.143212,0.15428,0.164536,0.174457,0.184768,0.196066,0.208689,0.222703,0.237932,0.254127,0.271008,0.288298,0.305752,0.323147,0.341086,0.359551,0.37852,0.397968,0.417866,0.438759,0.460697,0.483732,0.507919,0.533315,0.55998,0.58798,0.617378,0.648247,0.68066,0.714693,0.750427,0.787949,0.827346,0.868714,0.912149,0.957757,1.0,1.0,1.0,1.0]
year1930 = [0.064953,0.0109,0.005762,0.004057,0.003256,0.002736,0.002327,0.002012,0.001778,0.001617,0.001532,0.001527,0.001613,0.00179,0.002038,0.002335,0.002647,0.002951,0.003226,0.003475,0.003737,0.003998,0.004195,0.004307,0.004358,0.004389,0.004436,0.004506,0.004614,0.004755,0.004912,0.005074,0.005246,0.005426,0.005621,0.005834,0.006081,0.006379,0.00674,0.007154,0.007617,0.008106,0.008601,0.009092,0.009594,0.010131,0.010731,0.011409,0.012181,0.013037,0.013984,0.01499,0.016012,0.01703,0.018081,0.019217,0.020494,0.021935,0.023568,0.025386,0.027395,0.029558,0.03183,0.034194,0.036701,0.039454,0.042498,0.045799,0.049374,0.053263,0.057515,0.06217,0.067243,0.072762,0.07875,0.085087,0.091908,0.099494,0.107944,0.117096,0.127168,0.137555,0.14736,0.156222,0.164757,0.17388,0.184355,0.196638,0.210853,0.226829,0.244298,0.262949,0.282466,0.302571,0.323003,0.343682,0.364481,0.38526,0.405874,0.426168,0.447476,0.46985,0.493342,0.51801,0.54391,0.571106,0.599661,0.629644,0.661126,0.694182,0.728891,0.765336,0.803603,0.843783,0.885972,0.930271,0.976784,1.0,1.0,1.0,1.0]
year1940 = [0.05286,0.005785,0.003007,0.002003,0.001669,0.001473,0.001321,0.001204,0.001115,0.001052,0.001019,0.001026,0.001084,0.001198,0.001355,0.001535,0.001722,0.00191,0.002089,0.00226,0.002441,0.002621,0.00276,0.002843,0.002887,0.002921,0.002971,0.003038,0.003135,0.003257,0.003397,0.003546,0.003707,0.003878,0.004066,0.004277,0.004521,0.004807,0.005142,0.005523,0.005951,0.006418,0.006914,0.007436,0.007994,0.008599,0.009269,0.010021,0.010867,0.011799,0.012809,0.013881,0.015011,0.016191,0.017433,0.018782,0.020231,0.021729,0.023263,0.024871,0.026633,0.028576,0.030673,0.032933,0.035391,0.038116,0.041129,0.044408,0.047967,0.051851,0.056115,0.060814,0.065987,0.071671,0.077878,0.084494,0.091612,0.099449,0.10808,0.117382,0.127494,0.137986,0.148244,0.158015,0.16772,0.177982,0.189317,0.202027,0.216189,0.231678,0.248304,0.265847,0.284086,0.302821,0.321867,0.341281,0.360985,0.380897,0.400924,0.42097,0.442019,0.464119,0.487325,0.511692,0.537276,0.56414,0.592347,0.621964,0.653063,0.685716,0.720002,0.756002,0.793802,0.833492,0.875166,0.918925,0.964871,1.0,1.0,1.0,1.0]
year1950 = [0.032794,0.002446,0.001408,0.001147,0.000862,0.00079,0.000738,0.000696,0.000657,0.00062,0.000595,0.0006,0.000654,0.00077,0.000929,0.001107,0.001279,0.001438,0.001572,0.001684,0.001801,0.001914,0.001986,0.002004,0.001985,0.001955,0.00194,0.001945,0.001982,0.002048,0.002132,0.002229,0.002344,0.002478,0.002636,0.002822,0.003041,0.003302,0.003608,0.003959,0.004356,0.004794,0.005268,0.005776,0.006325,0.006925,0.007587,0.008315,0.009116,0.00999,0.010936,0.011952,0.013035,0.014185,0.015409,0.016715,0.018113,0.019606,0.021202,0.022899,0.024757,0.026729,0.028713,0.030676,0.032691,0.034871,0.037321,0.040078,0.043197,0.046672,0.050464,0.054558,0.058993,0.063778,0.068931,0.074579,0.080656,0.086977,0.093491,0.10034,0.107612,0.115584,0.124516,0.134558,0.14555,0.157231,0.169386,0.181893,0.194722,0.207928,0.221591,0.235794,0.25062,0.266135,0.282392,0.299016,0.315956,0.333154,0.350551,0.368078,0.386482,0.405806,0.426097,0.447401,0.469772,0.49326,0.517923,0.543819,0.57101,0.599561,0.629539,0.661016,0.694067,0.72877,0.765208,0.803469,0.843642,0.885824,0.930116,0.976621]
year1960 = [0.029374,0.001881,0.001163,0.000921,0.000755,0.000666,0.000602,0.000551,0.000504,0.000461,0.000432,0.000436,0.000494,0.000619,0.000791,0.000983,0.001167,0.001332,0.001465,0.001568,0.001673,0.001776,0.001835,0.001841,0.001809,0.001766,0.001735,0.001721,0.001734,0.001772,0.001825,0.001891,0.001981,0.002099,0.002246,0.002424,0.002631,0.002865,0.003126,0.003418,0.003753,0.004136,0.004564,0.005039,0.005568,0.006139,0.006774,0.007504,0.008346,0.009283,0.010327,0.01142,0.012488,0.013493,0.01449,0.015532,0.016722,0.018143,0.019851,0.021799,0.023924,0.026125,0.028346,0.03054,0.032764,0.035151,0.037759,0.040534,0.043489,0.046658,0.05019,0.054033,0.058008,0.062073,0.066384,0.070912,0.076058,0.082339,0.090003,0.098743,0.108351,0.118154,0.127564,0.136242,0.144637,0.153443,0.163233,0.17434,0.186837,0.200564,0.21529,0.23075,0.246681,0.262847,0.279032,0.295568,0.312399,0.329465,0.346701,0.364036,0.382238,0.40135,0.421418,0.442488,0.464613,0.487844,0.512236,0.537848,0.56474,0.592977,0.622626,0.653757,0.686445,0.720767,0.756805,0.794646,0.834378,0.876097,0.919902,0.965897]
year1970 = [0.022458,0.001319,0.00091,0.000778,0.00064,0.000583,0.000546,0.000509,0.00046,0.000402,0.000353,0.000346,0.000421,0.000598,0.00085,0.001127,0.001387,0.00162,0.001805,0.001948,0.002094,0.002233,0.002301,0.002281,0.002199,0.002093,0.002005,0.001954,0.001961,0.002017,0.002093,0.002174,0.002273,0.002387,0.002522,0.002683,0.002876,0.003104,0.00337,0.003674,0.00402,0.004402,0.004814,0.005254,0.005729,0.00626,0.00685,0.007486,0.00817,0.008912,0.009718,0.010612,0.01162,0.012759,0.01402,0.015386,0.016838,0.018369,0.019972,0.021659,0.023475,0.025417,0.027445,0.029551,0.031765,0.034157,0.036745,0.039488,0.042391,0.045493,0.04887,0.052551,0.056515,0.060778,0.06538,0.070386,0.075831,0.081717,0.088066,0.094912,0.102242,0.110126,0.118671,0.127923,0.137837,0.148337,0.159358,0.170861,0.182833,0.195286,0.208237,0.221704,0.235701,0.250239,0.265321,0.280767,0.296536,0.31258,0.328852,0.345294,0.362559,0.380687,0.399721,0.419707,0.440693,0.462727,0.485864,0.510157,0.535665,0.562448,0.59057,0.620099,0.651104,0.683659,0.717842,0.753734,0.791421,0.830992,0.872541,0.916168]
year1980 = [0.01398,0.001064,0.000719,0.000598,0.000465,0.000422,0.000394,0.000366,0.000324,0.000271,0.000225,0.00022,0.000292,0.000464,0.000707,0.000977,0.001229,0.001453,0.001626,0.001757,0.001885,0.002008,0.002082,0.002095,0.002063,0.002014,0.001968,0.001928,0.001903,0.001893,0.001888,0.001892,0.001916,0.001967,0.002044,0.002146,0.002269,0.002416,0.002587,0.002786,0.003018,0.003288,0.003594,0.00394,0.004329,0.004762,0.005244,0.005779,0.006372,0.007024,0.007741,0.008519,0.009345,0.010218,0.011148,0.012179,0.013305,0.014487,0.015717,0.017028,0.018437,0.020012,0.021822,0.023911,0.026246,0.02881,0.031517,0.034294,0.037098,0.039997,0.043117,0.046541,0.050252,0.054283,0.058649,0.063418,0.068552,0.073958,0.079614,0.085617,0.092043,0.099067,0.106844,0.115471,0.124871,0.134904,0.145456,0.156464,0.167918,0.179853,0.19232,0.205369,0.219051,0.233405,0.248461,0.263767,0.279251,0.294834,0.310431,0.325953,0.342251,0.359363,0.377331,0.396198,0.416008,0.436808,0.458649,0.481581,0.50566,0.530943,0.55749,0.585365,0.614633,0.645365,0.677633,0.711515,0.74709,0.784445,0.823667,0.86485]
year1990 = [0.010284,0.000768,0.000526,0.000396,0.000335,0.0003,0.000283,0.000265,0.000235,0.000194,0.00016,0.000162,0.000237,0.000404,0.000635,0.000897,0.001139,0.001333,0.001451,0.001512,0.001562,0.001623,0.001671,0.00171,0.001743,0.001768,0.001795,0.001833,0.00189,0.001963,0.00204,0.00212,0.00221,0.002312,0.002425,0.002555,0.002691,0.00281,0.002903,0.002985,0.003078,0.003204,0.003369,0.003582,0.003843,0.004147,0.004487,0.004862,0.005271,0.005722,0.00623,0.006806,0.007455,0.008185,0.008997,0.009889,0.010864,0.011932,0.013097,0.014361,0.015755,0.017258,0.018816,0.020411,0.022087,0.023927,0.025972,0.028197,0.030618,0.033263,0.036175,0.039379,0.042884,0.046709,0.050882,0.05545,0.060422,0.065781,0.071534,0.077724,0.084479,0.091787,0.099538,0.107716,0.116422,0.125788,0.135929,0.146915,0.158779,0.17151,0.185087,0.199473,0.214631,0.230521,0.247098,0.263784,0.280441,0.296921,0.313069,0.328722,0.345158,0.362416,0.380537,0.399564,0.419542,0.440519,0.462545,0.485672,0.509956,0.535453,0.562226,0.590337,0.619854,0.650847,0.683389,0.717559,0.753437,0.791109,0.830664,0.872197]
year2000 = [0.007589,0.000543,0.000376,0.000283,0.000218,0.0002,0.000191,0.000183,0.000167,0.000144,0.000126,0.000133,0.000188,0.000304,0.000464,0.000639,0.000803,0.000952,0.001074,0.001172,0.001271,0.001365,0.001418,0.001418,0.001381,0.00133,0.001289,0.001267,0.001274,0.001308,0.00135,0.001397,0.001461,0.001543,0.001644,0.00176,0.001892,0.00204,0.002203,0.002383,0.002579,0.002793,0.00303,0.003294,0.00358,0.003903,0.004243,0.004568,0.004863,0.005153,0.005468,0.005844,0.006297,0.006843,0.007479,0.008195,0.008974,0.009806,0.010685,0.011628,0.012682,0.013861,0.015147,0.016546,0.018079,0.019773,0.02165,0.023713,0.025976,0.028453,0.03125,0.034311,0.03749,0.040746,0.044199,0.048095,0.052542,0.057476,0.062939,0.069014,0.075762,0.083293,0.09172,0.101117,0.111478,0.122763,0.134943,0.148004,0.161949,0.176799,0.192574,0.209288,0.226948,0.24555,0.265079,0.284596,0.303868,0.322651,0.340689,0.357724,0.37561,0.39439,0.41411,0.434815,0.456556,0.479384,0.503353,0.528521,0.554947,0.582694,0.611829,0.64242,0.674541,0.708268,0.743682,0.780866,0.819909,0.860905,0.90395,0.949147]
year2010 = [0.00668,0.000436,0.000304,0.000232,0.000172,0.000155,0.000143,0.000131,0.000115,0.000096,0.000082,0.000086,0.000125,0.000205,0.000319,0.000441,0.000562,0.00069,0.00082,0.000949,0.001085,0.001213,0.001304,0.001345,0.00135,0.001342,0.00134,0.001342,0.001356,0.00138,0.001408,0.001435,0.001466,0.001499,0.001539,0.001592,0.00166,0.001741,0.001837,0.001953,0.002084,0.002241,0.002439,0.002686,0.002975,0.003297,0.003639,0.003997,0.004366,0.00475,0.005156,0.005596,0.006078,0.006605,0.007174,0.007805,0.008464,0.009095,0.009676,0.010245,0.010865,0.011592,0.012444,0.013451,0.014608,0.015927,0.01737,0.018895,0.020484,0.022191,0.024139,0.026364,0.028808,0.03148,0.034442,0.037855,0.041725,0.045932,0.050469,0.055465,0.061179,0.067698,0.074923,0.082891,0.091725,0.101575,0.112568,0.124795,0.138305,0.153107,0.169195,0.186543,0.205115,0.224867,0.245744,0.266454,0.286625,0.305869,0.323783,0.339972,0.356971,0.374819,0.39356,0.413238,0.4339,0.455595,0.478375,0.502293,0.527408,0.553778,0.581467,0.610541,0.641068,0.673121,0.706777,0.742116,0.779222,0.818183,0.859092,0.902047]

#total list w/ all values (for the 3d graph)
total = [[0.145957,0.038141,0.019578,0.013529,0.010797,0.00794,0.005698,0.004073,0.003046,0.002555,0.002484,0.00267,0.002936,0.003154,0.003356,0.003673,0.004148,0.004676,0.005233,0.005797,0.006421,0.007024,0.007445,0.007616,0.007606,0.007526,0.007496,0.007554,0.007754,0.008057,0.008382,0.00867,0.008939,0.009172,0.00938,0.009603,0.009845,0.010077,0.010294,0.01051,0.010743,0.011015,0.011337,0.011722,0.012169,0.012677,0.013235,0.013831,0.014462,0.015145,0.01589,0.016732,0.017708,0.018841,0.020114,0.021543,0.023065,0.024592,0.026088,0.027618,0.029303,0.031228,0.033395,0.035841,0.038578,0.041585,0.044879,0.048518,0.052527,0.056907,0.061824,0.067136,0.072537,0.077928,0.083538,0.089449,0.096175,0.104262,0.113999,0.125035,0.136917,0.149054,0.161175,0.173025,0.184855,0.197067,0.20998,0.22376,0.238407,0.253782,0.269703,0.285977,0.30241,0.318835,0.335096,0.352119,0.369937,0.388582,0.408089,0.428493,0.449918,0.472414,0.496034,0.520836,0.546878,0.574222,0.602933,0.633079,0.664733,0.69797,0.732869,0.769512,0.807988,0.848387,0.890806,0.935347,0.982114,1.0,1.0,1.0,1.0],
[0.120059,0.027289,0.014074,0.009755,0.007793,0.00581,0.004259,0.003142,0.002447,0.002129,0.002106,0.002263,0.002475,0.002652,0.002817,0.003061,0.003421,0.003828,0.004272,0.004732,0.005243,0.005735,0.006085,0.006236,0.006246,0.006203,0.006207,0.006291,0.0065,0.006802,0.007133,0.007442,0.00773,0.007978,0.008205,0.008438,0.008706,0.009016,0.00938,0.00979,0.010227,0.010677,0.011146,0.011629,0.01213,0.012702,0.01331,0.013864,0.014333,0.014777,0.015238,0.015843,0.016707,0.017906,0.019378,0.021031,0.022745,0.024463,0.026133,0.027815,0.029678,0.031765,0.03397,0.036291,0.038793,0.041512,0.044568,0.048082,0.052133,0.056676,0.061734,0.067139,0.072694,0.078311,0.084162,0.090268,0.097058,0.105021,0.1144,0.124863,0.136271,0.147852,0.158849,0.168867,0.178468,0.188504,0.199675,0.212384,0.226718,0.242477,0.259383,0.277114,0.295355,0.313827,0.332279,0.351231,0.370647,0.390483,0.410694,0.431229,0.452791,0.47543,0.499202,0.524162,0.55037,0.577888,0.606783,0.637122,0.668978,0.702427,0.737548,0.774426,0.813147,0.853804,0.896494,0.941319,0.988385,1.0,1.0,1.0,1.0],
[0.085935,0.018849,0.009794,0.006821,0.005456,0.004377,0.003538,0.002917,0.002494,0.002247,0.002157,0.002203,0.002362,0.002614,0.002938,0.003339,0.003776,0.004179,0.004512,0.004785,0.005074,0.005368,0.005576,0.005671,0.005688,0.005661,0.005661,0.005747,0.00596,0.006261,0.006595,0.006893,0.007134,0.00729,0.007384,0.007478,0.007601,0.007732,0.007877,0.008044,0.00823,0.008448,0.008714,0.009039,0.009421,0.009862,0.010355,0.010891,0.011468,0.012101,0.012791,0.01357,0.014477,0.015536,0.016726,0.01809,0.019536,0.020923,0.022191,0.023443,0.024811,0.026466,0.028495,0.030987,0.033899,0.037141,0.040629,0.044368,0.048335,0.052577,0.057275,0.062406,0.06779,0.073392,0.079342,0.085576,0.092459,0.100489,0.10989,0.120347,0.131686,0.143212,0.15428,0.164536,0.174457,0.184768,0.196066,0.208689,0.222703,0.237932,0.254127,0.271008,0.288298,0.305752,0.323147,0.341086,0.359551,0.37852,0.397968,0.417866,0.438759,0.460697,0.483732,0.507919,0.533315,0.55998,0.58798,0.617378,0.648247,0.68066,0.714693,0.750427,0.787949,0.827346,0.868714,0.912149,0.957757,1.0,1.0,1.0,1.0],
[0.064953,0.0109,0.005762,0.004057,0.003256,0.002736,0.002327,0.002012,0.001778,0.001617,0.001532,0.001527,0.001613,0.00179,0.002038,0.002335,0.002647,0.002951,0.003226,0.003475,0.003737,0.003998,0.004195,0.004307,0.004358,0.004389,0.004436,0.004506,0.004614,0.004755,0.004912,0.005074,0.005246,0.005426,0.005621,0.005834,0.006081,0.006379,0.00674,0.007154,0.007617,0.008106,0.008601,0.009092,0.009594,0.010131,0.010731,0.011409,0.012181,0.013037,0.013984,0.01499,0.016012,0.01703,0.018081,0.019217,0.020494,0.021935,0.023568,0.025386,0.027395,0.029558,0.03183,0.034194,0.036701,0.039454,0.042498,0.045799,0.049374,0.053263,0.057515,0.06217,0.067243,0.072762,0.07875,0.085087,0.091908,0.099494,0.107944,0.117096,0.127168,0.137555,0.14736,0.156222,0.164757,0.17388,0.184355,0.196638,0.210853,0.226829,0.244298,0.262949,0.282466,0.302571,0.323003,0.343682,0.364481,0.38526,0.405874,0.426168,0.447476,0.46985,0.493342,0.51801,0.54391,0.571106,0.599661,0.629644,0.661126,0.694182,0.728891,0.765336,0.803603,0.843783,0.885972,0.930271,0.976784,1.0,1.0,1.0,1.0],
[0.05286,0.005785,0.003007,0.002003,0.001669,0.001473,0.001321,0.001204,0.001115,0.001052,0.001019,0.001026,0.001084,0.001198,0.001355,0.001535,0.001722,0.00191,0.002089,0.00226,0.002441,0.002621,0.00276,0.002843,0.002887,0.002921,0.002971,0.003038,0.003135,0.003257,0.003397,0.003546,0.003707,0.003878,0.004066,0.004277,0.004521,0.004807,0.005142,0.005523,0.005951,0.006418,0.006914,0.007436,0.007994,0.008599,0.009269,0.010021,0.010867,0.011799,0.012809,0.013881,0.015011,0.016191,0.017433,0.018782,0.020231,0.021729,0.023263,0.024871,0.026633,0.028576,0.030673,0.032933,0.035391,0.038116,0.041129,0.044408,0.047967,0.051851,0.056115,0.060814,0.065987,0.071671,0.077878,0.084494,0.091612,0.099449,0.10808,0.117382,0.127494,0.137986,0.148244,0.158015,0.16772,0.177982,0.189317,0.202027,0.216189,0.231678,0.248304,0.265847,0.284086,0.302821,0.321867,0.341281,0.360985,0.380897,0.400924,0.42097,0.442019,0.464119,0.487325,0.511692,0.537276,0.56414,0.592347,0.621964,0.653063,0.685716,0.720002,0.756002,0.793802,0.833492,0.875166,0.918925,0.964871,1.0,1.0,1.0,1.0],
[0.032794,0.002446,0.001408,0.001147,0.000862,0.00079,0.000738,0.000696,0.000657,0.00062,0.000595,0.0006,0.000654,0.00077,0.000929,0.001107,0.001279,0.001438,0.001572,0.001684,0.001801,0.001914,0.001986,0.002004,0.001985,0.001955,0.00194,0.001945,0.001982,0.002048,0.002132,0.002229,0.002344,0.002478,0.002636,0.002822,0.003041,0.003302,0.003608,0.003959,0.004356,0.004794,0.005268,0.005776,0.006325,0.006925,0.007587,0.008315,0.009116,0.00999,0.010936,0.011952,0.013035,0.014185,0.015409,0.016715,0.018113,0.019606,0.021202,0.022899,0.024757,0.026729,0.028713,0.030676,0.032691,0.034871,0.037321,0.040078,0.043197,0.046672,0.050464,0.054558,0.058993,0.063778,0.068931,0.074579,0.080656,0.086977,0.093491,0.10034,0.107612,0.115584,0.124516,0.134558,0.14555,0.157231,0.169386,0.181893,0.194722,0.207928,0.221591,0.235794,0.25062,0.266135,0.282392,0.299016,0.315956,0.333154,0.350551,0.368078,0.386482,0.405806,0.426097,0.447401,0.469772,0.49326,0.517923,0.543819,0.57101,0.599561,0.629539,0.661016,0.694067,0.72877,0.765208,0.803469,0.843642,0.885824,0.930116,0.976621],
[0.029374,0.001881,0.001163,0.000921,0.000755,0.000666,0.000602,0.000551,0.000504,0.000461,0.000432,0.000436,0.000494,0.000619,0.000791,0.000983,0.001167,0.001332,0.001465,0.001568,0.001673,0.001776,0.001835,0.001841,0.001809,0.001766,0.001735,0.001721,0.001734,0.001772,0.001825,0.001891,0.001981,0.002099,0.002246,0.002424,0.002631,0.002865,0.003126,0.003418,0.003753,0.004136,0.004564,0.005039,0.005568,0.006139,0.006774,0.007504,0.008346,0.009283,0.010327,0.01142,0.012488,0.013493,0.01449,0.015532,0.016722,0.018143,0.019851,0.021799,0.023924,0.026125,0.028346,0.03054,0.032764,0.035151,0.037759,0.040534,0.043489,0.046658,0.05019,0.054033,0.058008,0.062073,0.066384,0.070912,0.076058,0.082339,0.090003,0.098743,0.108351,0.118154,0.127564,0.136242,0.144637,0.153443,0.163233,0.17434,0.186837,0.200564,0.21529,0.23075,0.246681,0.262847,0.279032,0.295568,0.312399,0.329465,0.346701,0.364036,0.382238,0.40135,0.421418,0.442488,0.464613,0.487844,0.512236,0.537848,0.56474,0.592977,0.622626,0.653757,0.686445,0.720767,0.756805,0.794646,0.834378,0.876097,0.919902,0.965897],
[0.022458,0.001319,0.00091,0.000778,0.00064,0.000583,0.000546,0.000509,0.00046,0.000402,0.000353,0.000346,0.000421,0.000598,0.00085,0.001127,0.001387,0.00162,0.001805,0.001948,0.002094,0.002233,0.002301,0.002281,0.002199,0.002093,0.002005,0.001954,0.001961,0.002017,0.002093,0.002174,0.002273,0.002387,0.002522,0.002683,0.002876,0.003104,0.00337,0.003674,0.00402,0.004402,0.004814,0.005254,0.005729,0.00626,0.00685,0.007486,0.00817,0.008912,0.009718,0.010612,0.01162,0.012759,0.01402,0.015386,0.016838,0.018369,0.019972,0.021659,0.023475,0.025417,0.027445,0.029551,0.031765,0.034157,0.036745,0.039488,0.042391,0.045493,0.04887,0.052551,0.056515,0.060778,0.06538,0.070386,0.075831,0.081717,0.088066,0.094912,0.102242,0.110126,0.118671,0.127923,0.137837,0.148337,0.159358,0.170861,0.182833,0.195286,0.208237,0.221704,0.235701,0.250239,0.265321,0.280767,0.296536,0.31258,0.328852,0.345294,0.362559,0.380687,0.399721,0.419707,0.440693,0.462727,0.485864,0.510157,0.535665,0.562448,0.59057,0.620099,0.651104,0.683659,0.717842,0.753734,0.791421,0.830992,0.872541,0.916168],
[0.01398,0.001064,0.000719,0.000598,0.000465,0.000422,0.000394,0.000366,0.000324,0.000271,0.000225,0.00022,0.000292,0.000464,0.000707,0.000977,0.001229,0.001453,0.001626,0.001757,0.001885,0.002008,0.002082,0.002095,0.002063,0.002014,0.001968,0.001928,0.001903,0.001893,0.001888,0.001892,0.001916,0.001967,0.002044,0.002146,0.002269,0.002416,0.002587,0.002786,0.003018,0.003288,0.003594,0.00394,0.004329,0.004762,0.005244,0.005779,0.006372,0.007024,0.007741,0.008519,0.009345,0.010218,0.011148,0.012179,0.013305,0.014487,0.015717,0.017028,0.018437,0.020012,0.021822,0.023911,0.026246,0.02881,0.031517,0.034294,0.037098,0.039997,0.043117,0.046541,0.050252,0.054283,0.058649,0.063418,0.068552,0.073958,0.079614,0.085617,0.092043,0.099067,0.106844,0.115471,0.124871,0.134904,0.145456,0.156464,0.167918,0.179853,0.19232,0.205369,0.219051,0.233405,0.248461,0.263767,0.279251,0.294834,0.310431,0.325953,0.342251,0.359363,0.377331,0.396198,0.416008,0.436808,0.458649,0.481581,0.50566,0.530943,0.55749,0.585365,0.614633,0.645365,0.677633,0.711515,0.74709,0.784445,0.823667,0.86485],
[0.010284,0.000768,0.000526,0.000396,0.000335,0.0003,0.000283,0.000265,0.000235,0.000194,0.00016,0.000162,0.000237,0.000404,0.000635,0.000897,0.001139,0.001333,0.001451,0.001512,0.001562,0.001623,0.001671,0.00171,0.001743,0.001768,0.001795,0.001833,0.00189,0.001963,0.00204,0.00212,0.00221,0.002312,0.002425,0.002555,0.002691,0.00281,0.002903,0.002985,0.003078,0.003204,0.003369,0.003582,0.003843,0.004147,0.004487,0.004862,0.005271,0.005722,0.00623,0.006806,0.007455,0.008185,0.008997,0.009889,0.010864,0.011932,0.013097,0.014361,0.015755,0.017258,0.018816,0.020411,0.022087,0.023927,0.025972,0.028197,0.030618,0.033263,0.036175,0.039379,0.042884,0.046709,0.050882,0.05545,0.060422,0.065781,0.071534,0.077724,0.084479,0.091787,0.099538,0.107716,0.116422,0.125788,0.135929,0.146915,0.158779,0.17151,0.185087,0.199473,0.214631,0.230521,0.247098,0.263784,0.280441,0.296921,0.313069,0.328722,0.345158,0.362416,0.380537,0.399564,0.419542,0.440519,0.462545,0.485672,0.509956,0.535453,0.562226,0.590337,0.619854,0.650847,0.683389,0.717559,0.753437,0.791109,0.830664,0.872197],
[0.007589,0.000543,0.000376,0.000283,0.000218,0.0002,0.000191,0.000183,0.000167,0.000144,0.000126,0.000133,0.000188,0.000304,0.000464,0.000639,0.000803,0.000952,0.001074,0.001172,0.001271,0.001365,0.001418,0.001418,0.001381,0.00133,0.001289,0.001267,0.001274,0.001308,0.00135,0.001397,0.001461,0.001543,0.001644,0.00176,0.001892,0.00204,0.002203,0.002383,0.002579,0.002793,0.00303,0.003294,0.00358,0.003903,0.004243,0.004568,0.004863,0.005153,0.005468,0.005844,0.006297,0.006843,0.007479,0.008195,0.008974,0.009806,0.010685,0.011628,0.012682,0.013861,0.015147,0.016546,0.018079,0.019773,0.02165,0.023713,0.025976,0.028453,0.03125,0.034311,0.03749,0.040746,0.044199,0.048095,0.052542,0.057476,0.062939,0.069014,0.075762,0.083293,0.09172,0.101117,0.111478,0.122763,0.134943,0.148004,0.161949,0.176799,0.192574,0.209288,0.226948,0.24555,0.265079,0.284596,0.303868,0.322651,0.340689,0.357724,0.37561,0.39439,0.41411,0.434815,0.456556,0.479384,0.503353,0.528521,0.554947,0.582694,0.611829,0.64242,0.674541,0.708268,0.743682,0.780866,0.819909,0.860905,0.90395,0.949147],
[0.00668,0.000436,0.000304,0.000232,0.000172,0.000155,0.000143,0.000131,0.000115,0.000096,0.000082,0.000086,0.000125,0.000205,0.000319,0.000441,0.000562,0.00069,0.00082,0.000949,0.001085,0.001213,0.001304,0.001345,0.00135,0.001342,0.00134,0.001342,0.001356,0.00138,0.001408,0.001435,0.001466,0.001499,0.001539,0.001592,0.00166,0.001741,0.001837,0.001953,0.002084,0.002241,0.002439,0.002686,0.002975,0.003297,0.003639,0.003997,0.004366,0.00475,0.005156,0.005596,0.006078,0.006605,0.007174,0.007805,0.008464,0.009095,0.009676,0.010245,0.010865,0.011592,0.012444,0.013451,0.014608,0.015927,0.01737,0.018895,0.020484,0.022191,0.024139,0.026364,0.028808,0.03148,0.034442,0.037855,0.041725,0.045932,0.050469,0.055465,0.061179,0.067698,0.074923,0.082891,0.091725,0.101575,0.112568,0.124795,0.138305,0.153107,0.169195,0.186543,0.205115,0.224867,0.245744,0.266454,0.286625,0.305869,0.323783,0.339972,0.356971,0.374819,0.39356,0.413238,0.4339,0.455595,0.478375,0.502293,0.527408,0.553778,0.581467,0.610541,0.641068,0.673121,0.706777,0.742116,0.779222,0.818183,0.859092,0.902047]]

#some years for plt labels
years = [1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010]

#first graph -------------
fig = plt.figure()
#plot the year 1900 data
plt.plot(year1900, label = "1900")
#plot the year 2010 data
plt.plot(year2010, label="2010")
#title of the graph
fig.suptitle("1900 vs 2010")
#label axes
plt.xlabel("Age")
plt.ylabel("Chances of dying (%)")
#print the legend
plt.legend()


#pie chart ----------------
fig1, ax1 = plt.subplots()
# #explode values! I exploded the first slice of the pie and the last one because they were the highest and lowest average death rate
explode = (0.05,0,0,0,0,0,0,0,0,0,0,0.05)
#list of avg values for pie charts
sizes =[np.mean(year1900),np.mean(year1910), np.mean(year1920), np.mean(year1930), np.mean(year1940),np.mean(year1950),np.mean(year1960),np.mean(year1970),np.mean(year1980),np.mean(year1990),np.mean(year2000),np.mean(year2010)]
#title, located on right, blue color, box around it
plt.title("Average chance of death per decade",fontsize=8,loc="left", color="blue",bbox={'facecolor': 'red', 'alpha': 0.25})
#pie chart with labels, exploded, etc.
ax1.pie(sizes,labels=years, explode=explode, autopct='%1.1f%%',startangle=90,radius=0.5)
#make it equal for circle
ax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.
#show it 
plt.show()
	
#start of 3d graph -------------------
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax = Axes3D(fig)

#ticks 
xticks = range(0,110,20)

#for 12 graphs
for x in range(12):
	#x vals are 0-110
	xvalueage = list(range(0,110))
	#y val = number of x times ten 
	yvalueydecade = x*10
	#take first 110 figures from the current list inside total list
	zvalue = (total[x][:110])
	#create the scatter plot
	ax.scatter(xvalueage, yvalueydecade, zvalue, alpha=0.3)
#all stuff for fancy year titles above graph
#xlocs of each string
xtitles = (10,10,10,10,10,10,10,10,10,10,10,10)
#contents of strings
newtitles = (1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010)
#ylocs of each string
ytitles = (0,10,20,30,40,50,60,70,80,90,100,110)
#zlocs of each string
ztitles = (0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6)
#direction of each string
zdirs = ('x','x','x','x','x','x','x','x','x','x','x','x')

#put it all together + put on graph
for zdir, x, y, z, title in zip(zdirs, xtitles, ytitles, ztitles, newtitles):
	#label is current item in title/newtitles
	label = '%d' % (title) 
	#place the label
	ax.text(x, y, z, label, zdir)

#overall title of the graph. 2d text 
ax.text2D(0.05, 0.95, "Decades from 1900 to 2010 compared", transform=ax.transAxes, color='g')

#setting x and y ticks
ax.set_xticks(xticks)
ax.set_yticks(xticks)
#axis labels
plt.xlabel("Age", color='r')
plt.ylabel("Years since 1900", color='b')
ax.set_zlabel("Percent chance of death", color='g')
#show
plt.show()


#ask feature
ask = input("Do you want to enter a decade and age? Type 'yes'!\n")
#if yes
if ask == "yes":
	#establish variables 
	yearchoice = input("what decade? Choose anything from 1900 to 2010.\n")
	agechoice = input("what age? Choose anything from 0 to 115\n")

	if int(yearchoice) == 1900:
		#integer version of age input
		officialage = int(agechoice)
		#chance of dying at given age
		deathpoint = year1900[officialage]
		#string that gets printed
		deathpointstring = 'You have a '+ str(deathpoint*100)+' percent chance of dying'
		fig = plt.figure()
		#plot the year data
		plt.plot(year1900, label = "1900")
		#title of the graph
		fig.suptitle("1900")
		#label axes
		plt.xlabel("Age")
		plt.ylabel("Chances of dying (%)")
		#plot marker @ point
		plt.plot(officialage,deathpoint, marker= "X")
		#print string 
		plt.text(15,0.65,deathpointstring, fontsize=9)
		plt.show()
		

	if int(yearchoice) == 1910:
		officialage = int(agechoice)
		deathpoint = year1900[officialage]

		deathpointstring = 'You have a '+ str(deathpoint*100)+' percent chance of dying'
		fig = plt.figure()
		#plot the year data
		plt.plot(year1910, label = "1910")
		#title of the graph
		fig.suptitle("1910")
		#label axes
		plt.xlabel("Age")
		plt.ylabel("Chances of dying (%)")
		plt.plot(officialage,deathpoint, marker= "X")
		plt.text(15,0.65,deathpointstring, fontsize=9)
		plt.show()

	if int(yearchoice) == 1920:
		officialage = int(agechoice)
		deathpoint = year1900[officialage]

		deathpointstring = 'You have a '+ str(deathpoint*100)+' percent chance of dying'
		fig = plt.figure()
		#plot the year data
		plt.plot(year1920, label = "1920")
		#title of the graph
		fig.suptitle("1920")
		#label axes
		plt.xlabel("Age")
		plt.ylabel("Chances of dying (%)")
		plt.plot(officialage,deathpoint, marker= "X")
		plt.text(15,0.65,deathpointstring, fontsize=9)
		plt.show()

	if int(yearchoice) == 1930:
		officialage = int(agechoice)
		deathpoint = year1900[officialage]

		deathpointstring = 'You have a '+ str(deathpoint*100)+' percent chance of dying'
		fig = plt.figure()
		#plot the year data
		plt.plot(year1930, label = "1930")
		#title of the graph
		fig.suptitle("1930")
		#label axes
		plt.xlabel("Age")
		plt.ylabel("Chances of dying (%)")
		plt.plot(officialage,deathpoint, marker= "X")
		plt.text(15,0.65,deathpointstring, fontsize=9)
		plt.show()

	if int(yearchoice) == 1940:
		officialage = int(agechoice)
		deathpoint = year1900[officialage]

		deathpointstring = 'You have a '+ str(deathpoint*100)+' percent chance of dying'
		fig = plt.figure()
		#plot the year data
		plt.plot(year1940, label = "1940")
		#title of the graph
		fig.suptitle("1940")
		#label axes
		plt.xlabel("Age")
		plt.ylabel("Chances of dying (%)")
		plt.plot(officialage,deathpoint, marker= "X")
		plt.text(15,0.65,deathpointstring, fontsize=9)
		plt.show()

	if int(yearchoice) == 1950:
		officialage = int(agechoice)
		deathpoint = year1900[officialage]

		deathpointstring = 'You have a '+ str(deathpoint*100)+' percent chance of dying'
		fig = plt.figure()
		#plot the year data
		plt.plot(year1950, label = "1950")
		#title of the graph
		fig.suptitle("1950")
		#label axes
		plt.xlabel("Age")
		plt.ylabel("Chances of dying (%)")
		plt.plot(officialage,deathpoint, marker= "X")
		plt.text(15,0.65,deathpointstring, fontsize=9)
		plt.show()

	if int(yearchoice) == 1960:
		officialage = int(agechoice)
		deathpoint = year1900[officialage]

		deathpointstring = 'You have a '+ str(deathpoint*100)+' percent chance of dying'
		fig = plt.figure()
		#plot the year data
		plt.plot(year1960, label = "1960")
		#title of the graph
		fig.suptitle("1960")
		#label axes
		plt.xlabel("Age")
		plt.ylabel("Chances of dying (%)")
		plt.plot(officialage,deathpoint, marker= "X")
		plt.text(15,0.65,deathpointstring, fontsize=9)
		plt.show()

	if int(yearchoice) == 1970:
		officialage = int(agechoice)
		deathpoint = year1900[officialage]

		deathpointstring = 'You have a '+ str(deathpoint*100)+' percent chance of dying'
		fig = plt.figure()
		#plot the year data
		plt.plot(year1970, label = "1970")
		#title of the graph
		fig.suptitle("1970")
		#label axes
		plt.xlabel("Age")
		plt.ylabel("Chances of dying (%)")
		plt.plot(officialage,deathpoint, marker= "X")
		plt.text(15,0.65,deathpointstring, fontsize=9)
		plt.show()

	if int(yearchoice) == 1980:
		officialage = int(agechoice)
		deathpoint = year1900[officialage]

		deathpointstring = 'You have a '+ str(deathpoint*100)+' percent chance of dying'
		fig = plt.figure()
		#plot the year data
		plt.plot(year1980, label = "1980")
		#title of the graph
		fig.suptitle("1980")
		#label axes
		plt.xlabel("Age")
		plt.ylabel("Chances of dying (%)")
		plt.plot(officialage,deathpoint, marker= "X")
		plt.text(15,0.65,deathpointstring, fontsize=9)
		plt.show()

	if int(yearchoice) == 1990:
		officialage = int(agechoice)
		deathpoint = year1900[officialage]

		deathpointstring = 'You have a '+ str(deathpoint*100)+' percent chance of dying'
		fig = plt.figure()
		#plot the year data
		plt.plot(year1990, label = "1990")
		#title of the graph
		fig.suptitle("1990")
		#label axes
		plt.xlabel("Age")
		plt.ylabel("Chances of dying (%)")
		plt.plot(officialage,deathpoint, marker= "X")
		plt.text(15,0.65,deathpointstring, fontsize=9)
		plt.show()

	if int(yearchoice) == 2000:
		officialage = int(agechoice)
		deathpoint = year1900[officialage]

		deathpointstring = 'You have a '+ str(deathpoint*100)+' percent chance of dying'
		fig = plt.figure()
		#plot the year data
		plt.plot(year2000, label = "2000")
		#title of the graph
		fig.suptitle("2000")
		#label axes
		plt.xlabel("Age")
		plt.ylabel("Chances of dying (%)")
		plt.plot(officialage,deathpoint, marker= "X")
		plt.text(15,0.65,deathpointstring, fontsize=9)
		plt.show()

	if int(yearchoice) == 2010:
		officialage = int(agechoice)
		deathpoint = year1900[officialage]

		deathpointstring = 'You have a '+ str(deathpoint*100)+' percent chance of dying'
		fig = plt.figure()
		#plot the year data
		plt.plot(year2010, label = "2010")
		#title of the graph
		fig.suptitle("2010")
		#label axes
		plt.xlabel("Age")
		plt.ylabel("Chances of dying (%)")
		plt.plot(officialage,deathpoint, marker= "X")
		plt.text(15,0.65,deathpointstring, fontsize=9)
		plt.show()


















	
